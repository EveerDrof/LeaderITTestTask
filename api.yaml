openapi: '3.0.3'
info:
  title: 'Test task'
  version: '0.0.1'
paths:
  /device:
    post:
      description: Adds a new device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCreationData'
      responses:
        '200':
          description: Returns device
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  payload:
                    $ref: '#/components/schemas/AddDeviceResponse'
  /device/active:
    get:
      description: Get all active devices.Device is active for 30 minutes after last event received
      responses:
        '200':
          description: Returns all active devices
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'

  /device/serial/{serialNumber}:
    get:
      description: Get device data
      responses:
        default:
          description: Device data
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  payload:
                    $ref: '#/components/schemas/Device'
  /device/all:
    get:
      requestBody:
        content:
          application/json:
            schema:
              startDateTime:
                type: string
                format: date-time
              endDateTime:
                type: string
                format: date-time
              "type":
                type: string
              page:
                type: number

      responses:
        default:
          description: Returns all devices that fit query.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
  /event:
    post:
      description: Adds a new event for a specified device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEventInfo'
      responses:
        default:
          description: Returns api response
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string

  /event/device/{deviceId}:
    get:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                startDateTime:
                  type: string
                  format: date-time
                endDateTime:
                  type: string
                  format: date-time
                type:
                  type: string
                page:
                  type: number
      responses:
        default:
          description: Returns all events that fit query
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  payload:
                    properties:
                      events:
                        type: array
                        items:
                          $ref: '#/components/schemas/Event'
  /event/grouped-by-device-type/:
    get:
      requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatePageLlimit'
      responses:
        default:
          description: Returns all events that fit query grouped by device type
          content:
                application/json:
                  schema:
                    properties:
                      message:
                        type: string
                      events:
                        type: object
                        additionalProperties:
                          items:
                            $ref: '#/components/schemas/Event'

components:
  schemas:
    AddDeviceResponse:
      type: object
      properties:
        secretKey:
          type: string
    DeviceCreationData:
      properties:
        name:
          type: string
        serial:
          type: number
          format: int64
        type:
          type: string
    Device:
      properties:
        id:
          type: number
        name:
          type: string
        serial:
          type: number
          format: int64
        type:
          type: string
        creationDate:
          type: string
          format: date-time
    AddEventInfo:
      properties:
        secretKey:
          type: string
        "type":
          type: string
        deviceSerial:
          type: integer
          format: int32
        payload:
          type: object
    DeviceQuery:
      properties:
        type:
          type: string
        datePageLimit:
          $ref: '#/components/schemas/DatePageLlimit'
    DatePageLlimit:
      properties:
        earliestDate:
          type: string
          format: date-time
        latestDate:
          type: string
          format: date-time
        type:
          type: string
        page:
          type: integer
    Event:
      properties:
        id:
          type: integer
        deviceId:
          type: integer
        type:
          type: string
        payload:
          type: object
        creationDate:
          type: string
          format: date-time
    ApiResponse:
      properties:
        message:
          type: string
